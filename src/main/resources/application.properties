# Database Connection Heroku (Postgresql)
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.connection.charSet=UTF-8
spring.jpa.properties.hibernate.hbm2ddl.import_files_sql_extractor=org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
spring.jpa.properties.hibernate.format_sql=true

logging.level.org.hibernate.SQL=off

#Hibernate second level cache using EhCache
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory

# Locale
spring.mvc.locale=en_EN

# Configuration for displaying custom 404 when a uri is not found.
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

#Security values
security.jwt.signing.key=our-super-secret-signing-key
logging.level.org.springframework.security=off

### MySQL localhost
#spring.datasource.url=jdbc:mysql://localhost:3306/parcel_organizer_db?useSSL=false&serverTimezone=CET&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=root
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL55Dialect

##Postgresql heroku
#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}

##Postgresql local host
#spring.datasource.url=jdbc:postgresql://localhost:5432/db_parcel_organizer
#spring.datasource.username=postgres
#spring.datasource.password=root
